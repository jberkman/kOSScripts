// mechanics.ks - Orbital mechanics routines.
// Copyright Â© 2015 jacob berkman
// Portions (c) the KSLib team
// This file is distributed under the terms of the MIT license.

@lazyglobal off.

function east_for {
  parameter ves.
  return vcrs(ves:up:vector, ves:north:vector).
}

function compassForVec {
  parameter ves.
  parameter vec.

  local east is east_for(ves).

  local trig_x is vdot(ves:north:vector, vec).
  local trig_y is vdot(east, vec).

  local result is arctan2(trig_y, trig_x).

  if result < 0 {
    return 360 + result.
  } else {
    return result.
  }
}

function pitchForVec {
  parameter ves.
  parameter vec.
  return 90 - vang(ves:up:vector, vec).
}

function deltaVBurnTime {
  parameter deltaV.
  if ship:availableThrust = 0 {
    return 0.
  }
  return abs(deltaV * ship:mass / ship:availableThrust).
}

function steerToDir {
  wait until vAng(steering:vector, ship:facing:vector) < 5.
}

function steerToVec {
  wait until vAng(steering, ship:facing:vector) < 5.
}

function clamp {
  parameter x, l, h.
  if x < l { return l. }
  if x > h { return h. }
  return x.
}
