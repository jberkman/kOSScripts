// launch.ks - Launch into a parking suborbital trajectory.
// Copyright Â© 2015 jacob berkman
// This file is distributed under the terms of the MIT license.

@lazyglobal off.

clearscreen.
print "DunaDirect Launch! v2.0".

parameter inclination, rendezvous.

local launchHeading is 90 - inclination.
local launchAltitude is body:atm:height + 10000.
if rendezvous {
	set launchAltitude to target:orbit:semiMajorAxis - body:radius.
} else {
  run lib_duna_direct.
}

print "Flight computer online.".
set ship:control:pilotmainthrottle to 0.
lock throttle to 1.
wait until verticalSpeed > 1.

print "Liftoff!".
wait until verticalSpeed > 10.

local lock lookAt to heading(launchHeading, 90).
local lock lookUp to heading(launchHeading, -45).
lock steering to lookdirup(lookAt:vector, lookUp:vector).

if body:atm:exists {
  wait until verticalSpeed > 50.

  print "Initiating gravity turn.".
  lock targetPitch to 90 - 90 * min(1, (apoapsis + altitude) / (body:atm:height + 10000)).
  lock lookAt to heading(launchHeading, targetPitch).

  until altitude > body:atm:height {
    set warp to 0.
    lock throttle to 1.
    until apoapsis > launchAltitude {
      wait until apoapsis > launchAltitude or maxThrust = 0.
      until maxThrust > 0 {
        wait 2.
        stage.
      }
    }
    lock throttle to 0.
    wait until altitude > body:atm:height or apoapsis < body:atm:height.
  }
} else {
	wait until apoapsis > altitude + 1000 - alt:radar.
  lock lookAt to heading(launchHeading, 22.5).
  wait until apoapsis > launchAltitude.
  lock throttle to 0.
}

if rendezvous {
	run dd_rendezvous.
} else {
	run dd_manual_burn(apoapsis, apoapsis, time:seconds + timeToApoapsisOfOrbit(obt)).
}
